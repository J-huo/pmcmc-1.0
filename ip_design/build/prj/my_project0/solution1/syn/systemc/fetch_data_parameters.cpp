// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "fetch_data_parameters.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fetch_data_parameters::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fetch_data_parameters::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> fetch_data_parameters::ap_ST_st1_fsm_0 = "000";
const sc_lv<3> fetch_data_parameters::ap_ST_st2_fsm_1 = "1";
const sc_lv<3> fetch_data_parameters::ap_ST_st3_fsm_2 = "10";
const sc_lv<3> fetch_data_parameters::ap_ST_st4_fsm_3 = "11";
const sc_lv<3> fetch_data_parameters::ap_ST_st5_fsm_4 = "100";
const sc_lv<3> fetch_data_parameters::ap_ST_st6_fsm_5 = "101";
const sc_lv<3> fetch_data_parameters::ap_ST_st7_fsm_6 = "110";
const sc_lv<3> fetch_data_parameters::ap_ST_st8_fsm_7 = "111";
const sc_lv<1> fetch_data_parameters::ap_const_lv1_0 = "0";
const sc_lv<3> fetch_data_parameters::ap_const_lv3_0 = "000";
const sc_lv<3> fetch_data_parameters::ap_const_lv3_4 = "100";
const sc_lv<3> fetch_data_parameters::ap_const_lv3_1 = "1";
const sc_lv<14> fetch_data_parameters::ap_const_lv14_0 = "00000000000000";
const sc_lv<2> fetch_data_parameters::ap_const_lv2_2 = "10";
const sc_lv<2> fetch_data_parameters::ap_const_lv2_1 = "1";
const sc_lv<2> fetch_data_parameters::ap_const_lv2_0 = "00";
const sc_lv<32> fetch_data_parameters::ap_const_lv32_0 = "00000000000000000000000000000000";

fetch_data_parameters::fetch_data_parameters(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( state_parameters_load_1_reg_559 );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( obs_parameters_rand_0_read );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_data6_s_reg_202 );
    sensitive << ( ap_return_10_preg );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( state_parameters_load_reg_554 );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( ap_return_2_preg );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_obs_parameters_fixed_s_reg_143 );
    sensitive << ( ap_return_3_preg );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_obs_parameters_fixed1_s_reg_119 );
    sensitive << ( ap_return_4_preg );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_obs_parameters_fixed2_s_reg_107 );
    sensitive << ( ap_return_5_preg );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_obs_parameters_fixed3_s_reg_131 );
    sensitive << ( ap_return_6_preg );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_data_s_reg_166 );
    sensitive << ( ap_return_7_preg );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_data4_s_reg_178 );
    sensitive << ( ap_return_8_preg );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( fetched_data5_s_reg_190 );
    sensitive << ( ap_return_9_preg );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_37_fu_386_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_exitcond1_fu_236_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( q2_reg_155 );

    SC_METHOD(thread_exitcond_fu_353_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( q4_reg_214 );

    SC_METHOD(thread_fetched_data4_1_fu_480_p3);
    sensitive << ( sel_tmp6_fu_454_p2 );
    sensitive << ( fetched_data4_s_reg_178 );
    sensitive << ( sel_tmp10_fu_472_p3 );

    SC_METHOD(thread_fetched_data5_1_fu_506_p3);
    sensitive << ( sel_tmp6_reg_654 );
    sensitive << ( fetched_data5_s_reg_190 );
    sensitive << ( sel_tmp13_fu_499_p3 );

    SC_METHOD(thread_fetched_data6_1_fu_526_p3);
    sensitive << ( sel_tmp6_reg_654 );
    sensitive << ( fetched_data6_s_reg_202 );
    sensitive << ( sel_tmp15_fu_519_p3 );

    SC_METHOD(thread_fetched_data_1_fu_459_p3);
    sensitive << ( data_q0 );
    sensitive << ( sel_tmp6_fu_454_p2 );
    sensitive << ( fetched_data_s_reg_166 );

    SC_METHOD(thread_fetched_obs_parameters_fixed1_1_fu_297_p3);
    sensitive << ( sel_tmp1_fu_284_p2 );
    sensitive << ( fetched_obs_parameters_fixed1_s_reg_119 );
    sensitive << ( sel_tmp3_fu_289_p3 );

    SC_METHOD(thread_fetched_obs_parameters_fixed2_1_fu_326_p3);
    sensitive << ( sel_tmp1_reg_602 );
    sensitive << ( fetched_obs_parameters_fixed2_s_reg_107 );
    sensitive << ( sel_tmp9_fu_319_p3 );

    SC_METHOD(thread_fetched_obs_parameters_fixed3_1_fu_346_p3);
    sensitive << ( sel_tmp1_reg_602 );
    sensitive << ( fetched_obs_parameters_fixed3_s_reg_131 );
    sensitive << ( sel_tmp5_fu_339_p3 );

    SC_METHOD(thread_fetched_obs_parameters_fixed_1_fu_305_p3);
    sensitive << ( obs_parameters_fixed_q0 );
    sensitive << ( sel_tmp1_fu_284_p2 );
    sensitive << ( fetched_obs_parameters_fixed_s_reg_143 );

    SC_METHOD(thread_obs_parameters_fixed_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_34_fu_269_p1 );

    SC_METHOD(thread_obs_parameters_fixed_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_q_1_fu_359_p2);
    sensitive << ( q4_reg_214 );

    SC_METHOD(thread_q_fu_242_p2);
    sensitive << ( q2_reg_155 );

    SC_METHOD(thread_sel_tmp10_fu_472_p3);
    sensitive << ( data_q0 );
    sensitive << ( sel_tmp2_fu_467_p2 );
    sensitive << ( fetched_data4_s_reg_178 );

    SC_METHOD(thread_sel_tmp11_fu_488_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_42_reg_636 );

    SC_METHOD(thread_sel_tmp12_fu_493_p3);
    sensitive << ( data_load_reg_648 );
    sensitive << ( sel_tmp11_reg_676 );
    sensitive << ( fetched_data5_s_reg_190 );

    SC_METHOD(thread_sel_tmp13_fu_499_p3);
    sensitive << ( sel_tmp2_reg_665 );
    sensitive << ( fetched_data5_s_reg_190 );
    sensitive << ( sel_tmp12_fu_493_p3 );

    SC_METHOD(thread_sel_tmp14_fu_513_p3);
    sensitive << ( data_load_reg_648 );
    sensitive << ( sel_tmp11_reg_676 );
    sensitive << ( fetched_data6_s_reg_202 );

    SC_METHOD(thread_sel_tmp15_fu_519_p3);
    sensitive << ( sel_tmp2_reg_665 );
    sensitive << ( fetched_data6_s_reg_202 );
    sensitive << ( sel_tmp14_fu_513_p3 );

    SC_METHOD(thread_sel_tmp1_fu_284_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_41_reg_572 );

    SC_METHOD(thread_sel_tmp2_fu_467_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_42_reg_636 );

    SC_METHOD(thread_sel_tmp3_fu_289_p3);
    sensitive << ( obs_parameters_fixed_q0 );
    sensitive << ( sel_tmp8_fu_279_p2 );
    sensitive << ( fetched_obs_parameters_fixed1_s_reg_119 );

    SC_METHOD(thread_sel_tmp4_fu_333_p3);
    sensitive << ( obs_parameters_fixed_load_reg_584 );
    sensitive << ( sel_tmp_reg_590 );
    sensitive << ( fetched_obs_parameters_fixed3_s_reg_131 );

    SC_METHOD(thread_sel_tmp5_fu_339_p3);
    sensitive << ( sel_tmp8_reg_596 );
    sensitive << ( fetched_obs_parameters_fixed3_s_reg_131 );
    sensitive << ( sel_tmp4_fu_333_p3 );

    SC_METHOD(thread_sel_tmp6_fu_454_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_42_reg_636 );

    SC_METHOD(thread_sel_tmp7_fu_313_p3);
    sensitive << ( obs_parameters_fixed_load_reg_584 );
    sensitive << ( sel_tmp_reg_590 );
    sensitive << ( fetched_obs_parameters_fixed2_s_reg_107 );

    SC_METHOD(thread_sel_tmp8_fu_279_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_41_reg_572 );

    SC_METHOD(thread_sel_tmp9_fu_319_p3);
    sensitive << ( sel_tmp8_reg_596 );
    sensitive << ( fetched_obs_parameters_fixed2_s_reg_107 );
    sensitive << ( sel_tmp7_fu_313_p3 );

    SC_METHOD(thread_sel_tmp_fu_274_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_41_reg_572 );

    SC_METHOD(thread_state_parameters_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_fu_226_p1 );

    SC_METHOD(thread_state_parameters_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_fu_231_p1 );

    SC_METHOD(thread_state_parameters_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_state_parameters_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_tmp_329_cast_fu_260_p1);
    sensitive << ( tmp_32_fu_252_p3 );

    SC_METHOD(thread_tmp_32_fu_252_p3);
    sensitive << ( tmp_41_fu_248_p1 );

    SC_METHOD(thread_tmp_332_cast_fu_377_p1);
    sensitive << ( tmp_35_fu_369_p3 );

    SC_METHOD(thread_tmp_33_fu_264_p2);
    sensitive << ( t );
    sensitive << ( tmp_329_cast_fu_260_p1 );

    SC_METHOD(thread_tmp_34_fu_269_p1);
    sensitive << ( tmp_33_fu_264_p2 );

    SC_METHOD(thread_tmp_35_fu_369_p3);
    sensitive << ( tmp_42_fu_365_p1 );

    SC_METHOD(thread_tmp_36_fu_381_p2);
    sensitive << ( t );
    sensitive << ( tmp_332_cast_fu_377_p1 );

    SC_METHOD(thread_tmp_37_fu_386_p1);
    sensitive << ( tmp_36_fu_381_p2 );

    SC_METHOD(thread_tmp_41_fu_248_p1);
    sensitive << ( q2_reg_155 );

    SC_METHOD(thread_tmp_42_fu_365_p1);
    sensitive << ( q4_reg_214 );

    SC_METHOD(thread_tmp_fu_226_p1);
    sensitive << ( t );

    SC_METHOD(thread_tmp_s_fu_231_p1);
    sensitive << ( state_param_fixed_dim );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_236_p2 );
    sensitive << ( exitcond_fu_353_p2 );

    ap_CS_fsm = "000";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    ap_return_2_preg = "00000000000000000000000000000000";
    ap_return_3_preg = "00000000000000000000000000000000";
    ap_return_4_preg = "00000000000000000000000000000000";
    ap_return_5_preg = "00000000000000000000000000000000";
    ap_return_6_preg = "00000000000000000000000000000000";
    ap_return_7_preg = "00000000000000000000000000000000";
    ap_return_8_preg = "00000000000000000000000000000000";
    ap_return_9_preg = "00000000000000000000000000000000";
    ap_return_10_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fetch_data_parameters_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, t, "(port)t");
    sc_trace(mVcdFile, state_parameters_address0, "(port)state_parameters_address0");
    sc_trace(mVcdFile, state_parameters_ce0, "(port)state_parameters_ce0");
    sc_trace(mVcdFile, state_parameters_q0, "(port)state_parameters_q0");
    sc_trace(mVcdFile, state_parameters_address1, "(port)state_parameters_address1");
    sc_trace(mVcdFile, state_parameters_ce1, "(port)state_parameters_ce1");
    sc_trace(mVcdFile, state_parameters_q1, "(port)state_parameters_q1");
    sc_trace(mVcdFile, obs_parameters_fixed_address0, "(port)obs_parameters_fixed_address0");
    sc_trace(mVcdFile, obs_parameters_fixed_ce0, "(port)obs_parameters_fixed_ce0");
    sc_trace(mVcdFile, obs_parameters_fixed_q0, "(port)obs_parameters_fixed_q0");
    sc_trace(mVcdFile, obs_parameters_rand_0_read, "(port)obs_parameters_rand_0_read");
    sc_trace(mVcdFile, data_address0, "(port)data_address0");
    sc_trace(mVcdFile, data_ce0, "(port)data_ce0");
    sc_trace(mVcdFile, data_q0, "(port)data_q0");
    sc_trace(mVcdFile, state_param_fixed_dim, "(port)state_param_fixed_dim");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, state_parameters_load_reg_554, "state_parameters_load_reg_554");
    sc_trace(mVcdFile, state_parameters_load_1_reg_559, "state_parameters_load_1_reg_559");
    sc_trace(mVcdFile, q_fu_242_p2, "q_fu_242_p2");
    sc_trace(mVcdFile, q_reg_567, "q_reg_567");
    sc_trace(mVcdFile, tmp_41_fu_248_p1, "tmp_41_fu_248_p1");
    sc_trace(mVcdFile, tmp_41_reg_572, "tmp_41_reg_572");
    sc_trace(mVcdFile, exitcond1_fu_236_p2, "exitcond1_fu_236_p2");
    sc_trace(mVcdFile, obs_parameters_fixed_load_reg_584, "obs_parameters_fixed_load_reg_584");
    sc_trace(mVcdFile, sel_tmp_fu_274_p2, "sel_tmp_fu_274_p2");
    sc_trace(mVcdFile, sel_tmp_reg_590, "sel_tmp_reg_590");
    sc_trace(mVcdFile, sel_tmp8_fu_279_p2, "sel_tmp8_fu_279_p2");
    sc_trace(mVcdFile, sel_tmp8_reg_596, "sel_tmp8_reg_596");
    sc_trace(mVcdFile, sel_tmp1_fu_284_p2, "sel_tmp1_fu_284_p2");
    sc_trace(mVcdFile, sel_tmp1_reg_602, "sel_tmp1_reg_602");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed1_1_fu_297_p3, "fetched_obs_parameters_fixed1_1_fu_297_p3");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed1_1_reg_608, "fetched_obs_parameters_fixed1_1_reg_608");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed_1_fu_305_p3, "fetched_obs_parameters_fixed_1_fu_305_p3");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed_1_reg_613, "fetched_obs_parameters_fixed_1_reg_613");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed2_1_fu_326_p3, "fetched_obs_parameters_fixed2_1_fu_326_p3");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed3_1_fu_346_p3, "fetched_obs_parameters_fixed3_1_fu_346_p3");
    sc_trace(mVcdFile, q_1_fu_359_p2, "q_1_fu_359_p2");
    sc_trace(mVcdFile, q_1_reg_631, "q_1_reg_631");
    sc_trace(mVcdFile, tmp_42_fu_365_p1, "tmp_42_fu_365_p1");
    sc_trace(mVcdFile, tmp_42_reg_636, "tmp_42_reg_636");
    sc_trace(mVcdFile, exitcond_fu_353_p2, "exitcond_fu_353_p2");
    sc_trace(mVcdFile, data_load_reg_648, "data_load_reg_648");
    sc_trace(mVcdFile, sel_tmp6_fu_454_p2, "sel_tmp6_fu_454_p2");
    sc_trace(mVcdFile, sel_tmp6_reg_654, "sel_tmp6_reg_654");
    sc_trace(mVcdFile, fetched_data_1_fu_459_p3, "fetched_data_1_fu_459_p3");
    sc_trace(mVcdFile, fetched_data_1_reg_660, "fetched_data_1_reg_660");
    sc_trace(mVcdFile, sel_tmp2_fu_467_p2, "sel_tmp2_fu_467_p2");
    sc_trace(mVcdFile, sel_tmp2_reg_665, "sel_tmp2_reg_665");
    sc_trace(mVcdFile, fetched_data4_1_fu_480_p3, "fetched_data4_1_fu_480_p3");
    sc_trace(mVcdFile, fetched_data4_1_reg_671, "fetched_data4_1_reg_671");
    sc_trace(mVcdFile, sel_tmp11_fu_488_p2, "sel_tmp11_fu_488_p2");
    sc_trace(mVcdFile, sel_tmp11_reg_676, "sel_tmp11_reg_676");
    sc_trace(mVcdFile, fetched_data5_1_fu_506_p3, "fetched_data5_1_fu_506_p3");
    sc_trace(mVcdFile, fetched_data6_1_fu_526_p3, "fetched_data6_1_fu_526_p3");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed2_s_reg_107, "fetched_obs_parameters_fixed2_s_reg_107");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed1_s_reg_119, "fetched_obs_parameters_fixed1_s_reg_119");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed3_s_reg_131, "fetched_obs_parameters_fixed3_s_reg_131");
    sc_trace(mVcdFile, fetched_obs_parameters_fixed_s_reg_143, "fetched_obs_parameters_fixed_s_reg_143");
    sc_trace(mVcdFile, q2_reg_155, "q2_reg_155");
    sc_trace(mVcdFile, fetched_data_s_reg_166, "fetched_data_s_reg_166");
    sc_trace(mVcdFile, fetched_data4_s_reg_178, "fetched_data4_s_reg_178");
    sc_trace(mVcdFile, fetched_data5_s_reg_190, "fetched_data5_s_reg_190");
    sc_trace(mVcdFile, fetched_data6_s_reg_202, "fetched_data6_s_reg_202");
    sc_trace(mVcdFile, q4_reg_214, "q4_reg_214");
    sc_trace(mVcdFile, tmp_fu_226_p1, "tmp_fu_226_p1");
    sc_trace(mVcdFile, tmp_s_fu_231_p1, "tmp_s_fu_231_p1");
    sc_trace(mVcdFile, tmp_34_fu_269_p1, "tmp_34_fu_269_p1");
    sc_trace(mVcdFile, tmp_37_fu_386_p1, "tmp_37_fu_386_p1");
    sc_trace(mVcdFile, tmp_32_fu_252_p3, "tmp_32_fu_252_p3");
    sc_trace(mVcdFile, tmp_329_cast_fu_260_p1, "tmp_329_cast_fu_260_p1");
    sc_trace(mVcdFile, tmp_33_fu_264_p2, "tmp_33_fu_264_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_289_p3, "sel_tmp3_fu_289_p3");
    sc_trace(mVcdFile, sel_tmp7_fu_313_p3, "sel_tmp7_fu_313_p3");
    sc_trace(mVcdFile, sel_tmp9_fu_319_p3, "sel_tmp9_fu_319_p3");
    sc_trace(mVcdFile, sel_tmp4_fu_333_p3, "sel_tmp4_fu_333_p3");
    sc_trace(mVcdFile, sel_tmp5_fu_339_p3, "sel_tmp5_fu_339_p3");
    sc_trace(mVcdFile, tmp_35_fu_369_p3, "tmp_35_fu_369_p3");
    sc_trace(mVcdFile, tmp_332_cast_fu_377_p1, "tmp_332_cast_fu_377_p1");
    sc_trace(mVcdFile, tmp_36_fu_381_p2, "tmp_36_fu_381_p2");
    sc_trace(mVcdFile, sel_tmp10_fu_472_p3, "sel_tmp10_fu_472_p3");
    sc_trace(mVcdFile, sel_tmp12_fu_493_p3, "sel_tmp12_fu_493_p3");
    sc_trace(mVcdFile, sel_tmp13_fu_499_p3, "sel_tmp13_fu_499_p3");
    sc_trace(mVcdFile, sel_tmp14_fu_513_p3, "sel_tmp14_fu_513_p3");
    sc_trace(mVcdFile, sel_tmp15_fu_519_p3, "sel_tmp15_fu_519_p3");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_return_3_preg, "ap_return_3_preg");
    sc_trace(mVcdFile, ap_return_4_preg, "ap_return_4_preg");
    sc_trace(mVcdFile, ap_return_5_preg, "ap_return_5_preg");
    sc_trace(mVcdFile, ap_return_6_preg, "ap_return_6_preg");
    sc_trace(mVcdFile, ap_return_7_preg, "ap_return_7_preg");
    sc_trace(mVcdFile, ap_return_8_preg, "ap_return_8_preg");
    sc_trace(mVcdFile, ap_return_9_preg, "ap_return_9_preg");
    sc_trace(mVcdFile, ap_return_10_preg, "ap_return_10_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fetch_data_parameters::~fetch_data_parameters() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void fetch_data_parameters::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_0_preg = state_parameters_load_1_reg_559.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_10_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_10_preg = fetched_data6_s_reg_202.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_1_preg = obs_parameters_rand_0_read.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_2_preg = state_parameters_load_reg_554.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_3_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_3_preg = fetched_obs_parameters_fixed_s_reg_143.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_4_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_4_preg = fetched_obs_parameters_fixed1_s_reg_119.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_5_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_5_preg = fetched_obs_parameters_fixed2_s_reg_107.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_6_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_6_preg = fetched_obs_parameters_fixed3_s_reg_131.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_7_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_7_preg = fetched_data_s_reg_166.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_8_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_8_preg = fetched_data4_s_reg_178.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_9_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
            ap_return_9_preg = fetched_data5_s_reg_190.read();
        }
    }
    if (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        q2_reg_155 = q_reg_567.read();
    } else if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        q2_reg_155 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_236_p2.read(), ap_const_lv1_0))) {
        q4_reg_214 = ap_const_lv3_0;
    } else if (esl_seteq<1,3,3>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        q4_reg_214 = q_1_reg_631.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        data_load_reg_648 = data_q0.read();
        fetched_data4_1_reg_671 = fetched_data4_1_fu_480_p3.read();
        fetched_data_1_reg_660 = fetched_data_1_fu_459_p3.read();
        sel_tmp11_reg_676 = sel_tmp11_fu_488_p2.read();
        sel_tmp2_reg_665 = sel_tmp2_fu_467_p2.read();
        sel_tmp6_reg_654 = sel_tmp6_fu_454_p2.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        fetched_data4_s_reg_178 = fetched_data4_1_reg_671.read();
        fetched_data5_s_reg_190 = fetched_data5_1_fu_506_p3.read();
        fetched_data6_s_reg_202 = fetched_data6_1_fu_526_p3.read();
        fetched_data_s_reg_166 = fetched_data_1_reg_660.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        fetched_obs_parameters_fixed1_1_reg_608 = fetched_obs_parameters_fixed1_1_fu_297_p3.read();
        fetched_obs_parameters_fixed_1_reg_613 = fetched_obs_parameters_fixed_1_fu_305_p3.read();
        obs_parameters_fixed_load_reg_584 = obs_parameters_fixed_q0.read();
        sel_tmp1_reg_602 = sel_tmp1_fu_284_p2.read();
        sel_tmp8_reg_596 = sel_tmp8_fu_279_p2.read();
        sel_tmp_reg_590 = sel_tmp_fu_274_p2.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        fetched_obs_parameters_fixed1_s_reg_119 = fetched_obs_parameters_fixed1_1_reg_608.read();
        fetched_obs_parameters_fixed2_s_reg_107 = fetched_obs_parameters_fixed2_1_fu_326_p3.read();
        fetched_obs_parameters_fixed3_s_reg_131 = fetched_obs_parameters_fixed3_1_fu_346_p3.read();
        fetched_obs_parameters_fixed_s_reg_143 = fetched_obs_parameters_fixed_1_reg_613.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read())) {
        q_1_reg_631 = q_1_fu_359_p2.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        q_reg_567 = q_fu_242_p2.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        state_parameters_load_1_reg_559 = state_parameters_q1.read();
        state_parameters_load_reg_554 = state_parameters_q0.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond1_fu_236_p2.read(), ap_const_lv1_0))) {
        tmp_41_reg_572 = tmp_41_fu_248_p1.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        tmp_42_reg_636 = tmp_42_fu_365_p1.read();
    }
}

void fetch_data_parameters::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) || 
         (esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fetch_data_parameters::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fetch_data_parameters::thread_ap_ready() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fetch_data_parameters::thread_ap_return_0() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_0 = state_parameters_load_1_reg_559.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_1() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_1 = obs_parameters_rand_0_read.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_10() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_10 = fetched_data6_s_reg_202.read();
    } else {
        ap_return_10 = ap_return_10_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_2() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_2 = state_parameters_load_reg_554.read();
    } else {
        ap_return_2 = ap_return_2_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_3() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_3 = fetched_obs_parameters_fixed_s_reg_143.read();
    } else {
        ap_return_3 = ap_return_3_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_4() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_4 = fetched_obs_parameters_fixed1_s_reg_119.read();
    } else {
        ap_return_4 = ap_return_4_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_5() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_5 = fetched_obs_parameters_fixed2_s_reg_107.read();
    } else {
        ap_return_5 = ap_return_5_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_6() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_6 = fetched_obs_parameters_fixed3_s_reg_131.read();
    } else {
        ap_return_6 = ap_return_6_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_7() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_7 = fetched_data_s_reg_166.read();
    } else {
        ap_return_7 = ap_return_7_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_8() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_8 = fetched_data4_s_reg_178.read();
    } else {
        ap_return_8 = ap_return_8_preg.read();
    }
}

void fetch_data_parameters::thread_ap_return_9() {
    if ((esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read()))) {
        ap_return_9 = fetched_data5_s_reg_190.read();
    } else {
        ap_return_9 = ap_return_9_preg.read();
    }
}

void fetch_data_parameters::thread_data_address0() {
    data_address0 =  (sc_lv<16>) (tmp_37_fu_386_p1.read());
}

void fetch_data_parameters::thread_data_ce0() {
    if (esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read())) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void fetch_data_parameters::thread_exitcond1_fu_236_p2() {
    exitcond1_fu_236_p2 = (!q2_reg_155.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(q2_reg_155.read() == ap_const_lv3_4);
}

void fetch_data_parameters::thread_exitcond_fu_353_p2() {
    exitcond_fu_353_p2 = (!q4_reg_214.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(q4_reg_214.read() == ap_const_lv3_4);
}

void fetch_data_parameters::thread_fetched_data4_1_fu_480_p3() {
    fetched_data4_1_fu_480_p3 = (!sel_tmp6_fu_454_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_fu_454_p2.read()[0].to_bool())? fetched_data4_s_reg_178.read(): sel_tmp10_fu_472_p3.read());
}

void fetch_data_parameters::thread_fetched_data5_1_fu_506_p3() {
    fetched_data5_1_fu_506_p3 = (!sel_tmp6_reg_654.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_reg_654.read()[0].to_bool())? fetched_data5_s_reg_190.read(): sel_tmp13_fu_499_p3.read());
}

void fetch_data_parameters::thread_fetched_data6_1_fu_526_p3() {
    fetched_data6_1_fu_526_p3 = (!sel_tmp6_reg_654.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_reg_654.read()[0].to_bool())? fetched_data6_s_reg_202.read(): sel_tmp15_fu_519_p3.read());
}

void fetch_data_parameters::thread_fetched_data_1_fu_459_p3() {
    fetched_data_1_fu_459_p3 = (!sel_tmp6_fu_454_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_fu_454_p2.read()[0].to_bool())? data_q0.read(): fetched_data_s_reg_166.read());
}

void fetch_data_parameters::thread_fetched_obs_parameters_fixed1_1_fu_297_p3() {
    fetched_obs_parameters_fixed1_1_fu_297_p3 = (!sel_tmp1_fu_284_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp1_fu_284_p2.read()[0].to_bool())? fetched_obs_parameters_fixed1_s_reg_119.read(): sel_tmp3_fu_289_p3.read());
}

void fetch_data_parameters::thread_fetched_obs_parameters_fixed2_1_fu_326_p3() {
    fetched_obs_parameters_fixed2_1_fu_326_p3 = (!sel_tmp1_reg_602.read()[0].is_01())? sc_lv<32>(): ((sel_tmp1_reg_602.read()[0].to_bool())? fetched_obs_parameters_fixed2_s_reg_107.read(): sel_tmp9_fu_319_p3.read());
}

void fetch_data_parameters::thread_fetched_obs_parameters_fixed3_1_fu_346_p3() {
    fetched_obs_parameters_fixed3_1_fu_346_p3 = (!sel_tmp1_reg_602.read()[0].is_01())? sc_lv<32>(): ((sel_tmp1_reg_602.read()[0].to_bool())? fetched_obs_parameters_fixed3_s_reg_131.read(): sel_tmp5_fu_339_p3.read());
}

void fetch_data_parameters::thread_fetched_obs_parameters_fixed_1_fu_305_p3() {
    fetched_obs_parameters_fixed_1_fu_305_p3 = (!sel_tmp1_fu_284_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp1_fu_284_p2.read()[0].to_bool())? obs_parameters_fixed_q0.read(): fetched_obs_parameters_fixed_s_reg_143.read());
}

void fetch_data_parameters::thread_obs_parameters_fixed_address0() {
    obs_parameters_fixed_address0 =  (sc_lv<16>) (tmp_34_fu_269_p1.read());
}

void fetch_data_parameters::thread_obs_parameters_fixed_ce0() {
    if (esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        obs_parameters_fixed_ce0 = ap_const_logic_1;
    } else {
        obs_parameters_fixed_ce0 = ap_const_logic_0;
    }
}

void fetch_data_parameters::thread_q_1_fu_359_p2() {
    q_1_fu_359_p2 = (!q4_reg_214.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(q4_reg_214.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void fetch_data_parameters::thread_q_fu_242_p2() {
    q_fu_242_p2 = (!q2_reg_155.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(q2_reg_155.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void fetch_data_parameters::thread_sel_tmp10_fu_472_p3() {
    sel_tmp10_fu_472_p3 = (!sel_tmp2_fu_467_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_467_p2.read()[0].to_bool())? data_q0.read(): fetched_data4_s_reg_178.read());
}

void fetch_data_parameters::thread_sel_tmp11_fu_488_p2() {
    sel_tmp11_fu_488_p2 = (!tmp_42_reg_636.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_42_reg_636.read() == ap_const_lv2_2);
}

void fetch_data_parameters::thread_sel_tmp12_fu_493_p3() {
    sel_tmp12_fu_493_p3 = (!sel_tmp11_reg_676.read()[0].is_01())? sc_lv<32>(): ((sel_tmp11_reg_676.read()[0].to_bool())? data_load_reg_648.read(): fetched_data5_s_reg_190.read());
}

void fetch_data_parameters::thread_sel_tmp13_fu_499_p3() {
    sel_tmp13_fu_499_p3 = (!sel_tmp2_reg_665.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_reg_665.read()[0].to_bool())? fetched_data5_s_reg_190.read(): sel_tmp12_fu_493_p3.read());
}

void fetch_data_parameters::thread_sel_tmp14_fu_513_p3() {
    sel_tmp14_fu_513_p3 = (!sel_tmp11_reg_676.read()[0].is_01())? sc_lv<32>(): ((sel_tmp11_reg_676.read()[0].to_bool())? fetched_data6_s_reg_202.read(): data_load_reg_648.read());
}

void fetch_data_parameters::thread_sel_tmp15_fu_519_p3() {
    sel_tmp15_fu_519_p3 = (!sel_tmp2_reg_665.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_reg_665.read()[0].to_bool())? fetched_data6_s_reg_202.read(): sel_tmp14_fu_513_p3.read());
}

void fetch_data_parameters::thread_sel_tmp1_fu_284_p2() {
    sel_tmp1_fu_284_p2 = (!tmp_41_reg_572.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_41_reg_572.read() == ap_const_lv2_0);
}

void fetch_data_parameters::thread_sel_tmp2_fu_467_p2() {
    sel_tmp2_fu_467_p2 = (!tmp_42_reg_636.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_42_reg_636.read() == ap_const_lv2_1);
}

void fetch_data_parameters::thread_sel_tmp3_fu_289_p3() {
    sel_tmp3_fu_289_p3 = (!sel_tmp8_fu_279_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_fu_279_p2.read()[0].to_bool())? obs_parameters_fixed_q0.read(): fetched_obs_parameters_fixed1_s_reg_119.read());
}

void fetch_data_parameters::thread_sel_tmp4_fu_333_p3() {
    sel_tmp4_fu_333_p3 = (!sel_tmp_reg_590.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_reg_590.read()[0].to_bool())? fetched_obs_parameters_fixed3_s_reg_131.read(): obs_parameters_fixed_load_reg_584.read());
}

void fetch_data_parameters::thread_sel_tmp5_fu_339_p3() {
    sel_tmp5_fu_339_p3 = (!sel_tmp8_reg_596.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_reg_596.read()[0].to_bool())? fetched_obs_parameters_fixed3_s_reg_131.read(): sel_tmp4_fu_333_p3.read());
}

void fetch_data_parameters::thread_sel_tmp6_fu_454_p2() {
    sel_tmp6_fu_454_p2 = (!tmp_42_reg_636.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_42_reg_636.read() == ap_const_lv2_0);
}

void fetch_data_parameters::thread_sel_tmp7_fu_313_p3() {
    sel_tmp7_fu_313_p3 = (!sel_tmp_reg_590.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_reg_590.read()[0].to_bool())? obs_parameters_fixed_load_reg_584.read(): fetched_obs_parameters_fixed2_s_reg_107.read());
}

void fetch_data_parameters::thread_sel_tmp8_fu_279_p2() {
    sel_tmp8_fu_279_p2 = (!tmp_41_reg_572.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_41_reg_572.read() == ap_const_lv2_1);
}

void fetch_data_parameters::thread_sel_tmp9_fu_319_p3() {
    sel_tmp9_fu_319_p3 = (!sel_tmp8_reg_596.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_reg_596.read()[0].to_bool())? fetched_obs_parameters_fixed2_s_reg_107.read(): sel_tmp7_fu_313_p3.read());
}

void fetch_data_parameters::thread_sel_tmp_fu_274_p2() {
    sel_tmp_fu_274_p2 = (!tmp_41_reg_572.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_41_reg_572.read() == ap_const_lv2_2);
}

void fetch_data_parameters::thread_state_parameters_address0() {
    state_parameters_address0 =  (sc_lv<15>) (tmp_fu_226_p1.read());
}

void fetch_data_parameters::thread_state_parameters_address1() {
    state_parameters_address1 =  (sc_lv<15>) (tmp_s_fu_231_p1.read());
}

void fetch_data_parameters::thread_state_parameters_ce0() {
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        state_parameters_ce0 = ap_const_logic_1;
    } else {
        state_parameters_ce0 = ap_const_logic_0;
    }
}

void fetch_data_parameters::thread_state_parameters_ce1() {
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        state_parameters_ce1 = ap_const_logic_1;
    } else {
        state_parameters_ce1 = ap_const_logic_0;
    }
}

void fetch_data_parameters::thread_tmp_329_cast_fu_260_p1() {
    tmp_329_cast_fu_260_p1 = esl_zext<32,16>(tmp_32_fu_252_p3.read());
}

void fetch_data_parameters::thread_tmp_32_fu_252_p3() {
    tmp_32_fu_252_p3 = esl_concat<2,14>(tmp_41_fu_248_p1.read(), ap_const_lv14_0);
}

void fetch_data_parameters::thread_tmp_332_cast_fu_377_p1() {
    tmp_332_cast_fu_377_p1 = esl_zext<32,16>(tmp_35_fu_369_p3.read());
}

void fetch_data_parameters::thread_tmp_33_fu_264_p2() {
    tmp_33_fu_264_p2 = (!tmp_329_cast_fu_260_p1.read().is_01() || !t.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_329_cast_fu_260_p1.read()) + sc_biguint<32>(t.read()));
}

void fetch_data_parameters::thread_tmp_34_fu_269_p1() {
    tmp_34_fu_269_p1 = esl_zext<64,32>(tmp_33_fu_264_p2.read());
}

void fetch_data_parameters::thread_tmp_35_fu_369_p3() {
    tmp_35_fu_369_p3 = esl_concat<2,14>(tmp_42_fu_365_p1.read(), ap_const_lv14_0);
}

void fetch_data_parameters::thread_tmp_36_fu_381_p2() {
    tmp_36_fu_381_p2 = (!tmp_332_cast_fu_377_p1.read().is_01() || !t.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_332_cast_fu_377_p1.read()) + sc_biguint<32>(t.read()));
}

void fetch_data_parameters::thread_tmp_37_fu_386_p1() {
    tmp_37_fu_386_p1 = esl_zext<64,32>(tmp_36_fu_381_p2.read());
}

void fetch_data_parameters::thread_tmp_41_fu_248_p1() {
    tmp_41_fu_248_p1 = q2_reg_155.read().range(2-1, 0);
}

void fetch_data_parameters::thread_tmp_42_fu_365_p1() {
    tmp_42_fu_365_p1 = q4_reg_214.read().range(2-1, 0);
}

void fetch_data_parameters::thread_tmp_fu_226_p1() {
    tmp_fu_226_p1 = esl_zext<64,32>(t.read());
}

void fetch_data_parameters::thread_tmp_s_fu_231_p1() {
    tmp_s_fu_231_p1 = esl_zext<64,32>(state_param_fixed_dim.read());
}

void fetch_data_parameters::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_236_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 5 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_353_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}
}

